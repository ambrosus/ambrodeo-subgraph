# Token entity represents each ERC20 token created by the Token Factory
type Token @entity {
  id: ID!                          # Unique identifier (token address)
  creator: User!                   # Reference to the creator (User entity)
  name: String!                    # Token name
  symbol: String!                  # Token symbol
  initialSupply: BigInt!           # Initial supply at creation
  totalSupply: BigInt!             # Current total supply
  curvePoints: [BigInt!]!                    # Reference to the bonding curve
  holders: [Holder!] @derivedFrom(field: "token")
  trades: [Trade!] @derivedFrom(field: "token")
  createdAt: BigInt!               # Timestamp of creation
}

# User entity represents addresses interacting with the platform
type User @entity {
  id: ID!                          # User address
  tokensCreated: [Token!] @derivedFrom(field: "creator")
  holdings: [Holder!] @derivedFrom(field: "user")
  trades: [Trade!] @derivedFrom(field: "user")
  isInsider: Boolean!              # Indicates if the user is an insider
}

# Holder entity tracks balances of users for each token
type Holder @entity {
  id: ID!                          # Unique identifier (token address + user address)
  token: Token!                    # Reference to the Token
  user: User!                      # Reference to the User
  balance: BigInt!                 # Current balance
}

# Trade entity captures executed trades between users
type Trade @entity {
  id: ID!                          # Unique trade identifier
  token: Token!                    # Reference to the Token
  user: User!                      # Buyer in the trade
  amount: BigInt!                  # Amount traded
  price: BigInt!                   # Price per token at execution
  fees: BigInt!                    # Fees applied to the trade
  timestamp: BigInt!               # Timestamp of trade execution
  isBuy: Boolean!                  # Indicates if the user is the buyer
}

# Candle entity for time-based aggregations (e.g., hourly, daily)
type Candle @entity {
  id: ID!                          # Unique identifier (token address + interval start time)
  token: Token!                    # Reference to the Token
  interval: String!                # Interval type (e.g., "hourly", "daily")
  startTime: BigInt!               # Start time of the interval
  endTime: BigInt!                 # End time of the interval
  open: BigInt!                    # Opening price
  high: BigInt!                    # Highest price in the interval
  low: BigInt!                     # Lowest price in the interval
  close: BigInt!                   # Closing price
  volume: BigInt!                  # Total volume traded
  uniqueBuyers: Int!               # Number of unique buyer addresses
  uniqueSellers: Int!              # Number of unique seller addresses
}
